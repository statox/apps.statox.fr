import"../chunks/NZTpNUN0.js";import{p as X,g,G as T,h as t,b as O,s as f,i as k,r as _,t as U,a as y,F as ue,e as l,d as Y,f as K,a$ as ce,a_ as L,j as $,c as me}from"../chunks/tjCGPzdr.js";import{d as Z,s as V,e as ve}from"../chunks/DOKer7p_.js";import{i as I}from"../chunks/BsrVr-Z0.js";import{e as ee,i as te}from"../chunks/An4e5j9g.js";import{r as z,b as re}from"../chunks/DKsZ4ghV.js";import{M as de}from"../chunks/CJFchB7S.js";import{m as P,g as R,c as D,b as B,B as d,a as pe,n as he,d as G,i as fe,e as be}from"../chunks/BLGMfthj.js";import{b as J}from"../chunks/B25JaP4K.js";const ge=r=>{const a=R(r),e=Math.floor(Math.random()*a.length);return a[e]},_e=(r,a)=>{const e=ge(r);return{board:P(r,a,e),move:e}},we=(r,a,e)=>{console.log("MCTS run with",e);const n=Se(r,a,e.iterations,e.c);return{board:P(r,a,n),move:n}};class ae{board;player;move;parent;children=[];visits=0;wins=0;constructor(a,e,n=null,i=null){this.board=a,this.player=e,this.move=n,this.parent=i}isFullyExpanded(){return this.children.length===R(this.board).length}isTerminal(){return B(this.board)!==d.notOver}}function Q(r,a,e,n=Math.sqrt(2)){return e===0?1/0:a/e+n*Math.sqrt(Math.log(r)/e)}function ye(r,a){for(;!r.isTerminal();)if(r.isFullyExpanded())r=Ce(r,a);else return Me(r);return r}function Me(r){const a=r.children.map(m=>m.move),n=R(r.board).filter(m=>!a.includes(m)),i=n[Math.floor(Math.random()*n.length)],s=D(r.board);P(s,r.player,i);const u=new ae(s,r.player===1?2:1,i,r);return r.children.push(u),u}function Ce(r,a){return r.children.reduce((e,n)=>{const i=Q(r.visits,e.wins,e.visits,a);return Q(r.visits,n.wins,n.visits,a)>i?n:e})}function xe(r){const a=D(r.board);let e=r.player;for(;;){const n=B(a);if(n!==d.notOver)return n;const i=R(a),s=i[Math.floor(Math.random()*i.length)];P(a,e,s),e=e===1?2:1}}function ke(r,a){let e=r;for(;e!==null;)e.visits+=1,a===d.winPlayer1&&e.parent?.player===1||a===d.winPlayer2&&e.parent?.player===2?e.wins+=1:a===d.draw&&(e.wins+=.5),e=e.parent}function Se(r,a,e=1e3,n=Math.sqrt(2)){const i=new ae(D(r),a,null,null);for(let u=0;u<e;u++){const m=ye(i,n),c=xe(m);ke(m,c)}return i.children.reduce((u,m)=>u.visits>m.visits?u:m).move}var Te=(r,a,e,n,i)=>{t(a)&&(l(e,t(a).iterations,!0),l(n,t(a).c,!0),i())},Be=O("<option> </option>"),Pe=(r,a,e)=>{l(a,null),e()},qe=(r,a,e)=>{l(a,null),e()},Ge=O(`<div><h4>Monte Carlo Tree Search parameters</h4> <label for="mcts-preset">Preset difficulty</label> <select></select> <br/><br/> <label for="mcts-iterations">Iterations:</label> <input id="mcts-iterations" type="number" min="0"/> <small>Number of simulations MCTS will run before choosing a move. Higher values usually mean
        stronger play but slower decisions.</small> <br/><br/> <label for="mcts-c">C (exploration constant):</label> <input id="mcts-c" type="number" min="0" step="0.1"/> <small>Controls the balance between exploration and exploitation. Lower values (e.g. 0.5, 0.7)
        favor tested moves, higher values (e.g. 2.0, 5.0) explore more. A typical default is √2 ≈
        1.41.</small></div>`);function Oe(r,a){X(a,!0);const e=[{name:"easy",iterations:200,c:2},{name:"medium",iterations:1e3,c:1.41},{name:"hard",iterations:5e3,c:.7}];let n=g(T(e[1])),i=g(T(t(n).iterations)),s=g(T(t(n).c));const u=()=>{a.onUpdate({iterations:t(i),c:t(s)})};var m=Ge(),c=f(k(m),4);c.__change=[Te,n,i,s,u],ee(c,21,()=>e,te,(p,S)=>{var b=Be(),q=k(b,!0);_(b);var C={};U(()=>{V(q,t(S).name),C!==(C=t(S))&&(b.value=(b.__value=t(S))??"")}),y(p,b)}),_(c);var w=f(c,7);z(w),w.__change=[Pe,n,u];var M=f(w,9);z(M),M.__change=[qe,n,u],ue(2),_(m),re(c,()=>t(n),p=>l(n,p)),J(w,()=>t(i),p=>l(i,p)),J(M,()=>t(s),p=>l(s,p)),y(r,m),Y()}Z(["change"]);var Re=O("<option> </option>"),Fe=O('<!> <div class="main"><h3>Gravitrip</h3></div> <div>See <a href="https://www.quora.com/What-is-the-winning-strategy-for-the-first-player-in-Connect-Four-games">this quora thread</a> for some tips on the winning strategy</div> <div>Computer stategy: <select></select></div> <!> <span><button>Restart game</button> <span style="font-weight: bold"><!></span></span> <!>',1);function He(r,a){X(a,!0);let e=g(T(Array.from({length:7},()=>[]))),n=L(()=>B(t(e))),i=L(()=>be(t(e))),s=g(null),u=g("mcts"),m=g(T({iterations:1e3,c:1.41})),c=g(1);const w=()=>{l(e,Array.from({length:7},()=>[]),!0),l(c,1)},M=(o,v)=>{t(c)===1&&fe(t(e),o)&&B(t(e))===d.notOver&&(l(e,P(t(e),v,o),!0),l(c,t(c)===1?2:1,!0),setTimeout(()=>p(),200))},p=()=>{if(t(c)!==2||B(t(e))!==d.notOver)return;let o;if(t(u)==="random")o=_e(t(e),t(c));else if(t(u)==="mcts")o=we(t(e),t(c),t(m));else throw new Error("computer strategy not implemented");const{board:v,move:h}=o;l(e,v,!0),l(s,h,!0),l(c,1)},S=o=>{switch(o.keyCode){case 82:w();break;case 39:if(t(s)===null){l(s,Math.floor(G/2),!0);return}l(s,Math.min(t(s)+1,G-1),!0);break;case 37:if(t(s)===null){l(s,Math.floor(G/2),!0);return}l(s,Math.max(t(s)-1,0),!0);break;case 32:if(t(s)===null)return;M(t(s),t(c));break}};var b=Fe();ve("keydown",ce,S);var q=K(b);de(q,{title:"Gravitrip",description:"Gravitrip"});var C=f(q,6),F=f(k(C));ee(F,20,()=>["mcts","random"],te,(o,v)=>{var h=Re(),E=k(h,!0);_(h);var x={};U(()=>{V(E,v),x!==(x=v)&&(h.value=(h.__value=v)??"")}),y(o,h)}),_(F),_(C);var N=f(C,2);{var ne=o=>{Oe(o,{onUpdate:v=>l(m,v,!0)})};I(N,o=>{t(u)==="mcts"&&o(ne)})}var A=f(N,2),W=k(A);W.__click=w;var j=f(W,2),oe=k(j);{var se=o=>{var v=$("Game Over");y(o,v)},ie=o=>{var v=me(),h=K(v);{var E=x=>{var H=$();U(()=>V(H,`Player ${t(n)??""} wins`)),y(x,H)};I(h,x=>{(t(n)===d.winPlayer1||t(n)===d.winPlayer2)&&x(E)},!0)}y(o,v)};I(oe,o=>{t(n)===d.draw?o(se):o(ie,!1)})}_(j),_(A);var le=f(A,2);pe(le,{get nbColumns(){return G},get nbRows(){return he},get board(){return t(e)},get winningCells(){return t(i)},onMove:o=>M(o,t(c))}),re(F,()=>t(u),o=>l(u,o)),y(r,b),Y()}Z(["click"]);export{He as component};
