import"../chunks/NZTpNUN0.js";import{z as Ce,A as I,B as V,g as n,p as F,f as Z,F as C,x as E,a as M,E as Pe,v as x,s as m,aZ as te,G as b,a_ as se,c as ne,y as ke}from"../chunks/Br9SMxIB.js";import{d as Ie,s as j,e as re}from"../chunks/BBzb7ThI.js";import{i as J}from"../chunks/CvXxFVm9.js";import{e as $,i as N}from"../chunks/D1-nhZYT.js";import{b as le,a as ae,r as ie,s as Ae,c as oe}from"../chunks/DWdbj9D8.js";import{b as ce}from"../chunks/C6S4cPPP.js";import{M as Oe}from"../chunks/DKmGubEx.js";var y=(e=>(e[e.notOver=0]="notOver",e[e.winPlayer1=1]="winPlayer1",e[e.winPlayer2=2]="winPlayer2",e[e.draw=3]="draw",e))(y||{});const q=7,P=6,_=4;class Te extends Error{constructor(s){super("Can't play in column "+s)}}const K=e=>e.map(s=>[...s]),ue=(e,s)=>e[s].length!==P,z=e=>{const s=[];for(let t=0;t<e.length;t++)e[t].length<P&&s.push(t);return s},Ee=e=>{const s=q*P,t=e.reduce((l,o)=>l+o.length,0);return s===t},qe=e=>{for(let s=0;s<q;s++)for(let t=0;t<P;t++){if(e[s].length<t||!e[s][t])continue;const l=e[s][t];let o=0,f=0,h=0,c=0;for(let r=0;r<_;r++)t+r<=e[s].length&&e[s][t+r]===l&&o++,s+r<e.length&&e[s+r][t]===l&&f++,s+r<e.length&&t+r<=e[s+r].length&&e[s+r][t+r]===l&&h++,s+r<e.length&&t-r>=0&&e[s+r][t-r]===l&&c++;if(o===_||f===_||h===_||c===_)return l}return null},Fe=e=>{if(A(e)===0)return null;for(let s=0;s<q;s++)for(let t=0;t<P;t++){if(e[s].length<t||!e[s][t])continue;const l=e[s][t],o=[],f=[],h=[],c=[];for(let r=0;r<_;r++)t+r<=e[s].length&&e[s][t+r]===l&&o.push([t+r,s]),s+r<e.length&&e[s+r][t]===l&&f.push([t,s+r]),s+r<e.length&&t+r<=e[s+r].length&&e[s+r][t+r]===l&&h.push([t+r,s+r]),s+r<e.length&&t-r>=0&&e[s+r][t-r]===l&&c.push([t-r,s+r]);if(o.length===_)return o;if(f.length===_)return f;if(h.length===_)return h;if(c.length===_)return c}return null},A=e=>{if(Ee(e))return 3;const s=qe(e);return s===1?1:s===2?2:0},G=(e,s,t)=>{if(!ue(e,t))throw new Te(t);return e[t].push(s),e},Ge=e=>{const s=z(e),t=Math.floor(Math.random()*s.length);return s[t]},Re=(e,s)=>{const t=Ge(e);return{board:G(e,s,t),move:t}},We=(e,s,t)=>{const l=He(e,s,t?.iterations,t?.c);return{board:G(e,s,l),move:l}};class fe{board;player;move;parent;children=[];visits=0;wins=0;constructor(s,t,l=null,o=null){this.board=s,this.player=t,this.move=l,this.parent=o}isFullyExpanded(){return this.children.length===z(this.board).length}isTerminal(){return A(this.board)!==y.notOver}}function ve(e,s,t,l=Math.sqrt(2)){return t===0?1/0:s/t+l*Math.sqrt(Math.log(e)/t)}function Ve(e,s){for(;!e.isTerminal();)if(e.isFullyExpanded())e=Ne(e,s);else return $e(e);return e}function $e(e){const s=e.children.map(c=>c.move),l=z(e.board).filter(c=>!s.includes(c)),o=l[Math.floor(Math.random()*l.length)],f=K(e.board);G(f,e.player,o);const h=new fe(f,e.player===1?2:1,o,e);return e.children.push(h),h}function Ne(e,s){return e.children.reduce((t,l)=>{const o=ve(e.visits,t.wins,t.visits,s);return ve(e.visits,l.wins,l.visits,s)>o?l:t})}function ze(e){const s=K(e.board);let t=e.player;for(;;){const l=A(s);if(l!==y.notOver)return l;const o=z(s),f=o[Math.floor(Math.random()*o.length)];G(s,t,f),t=t===1?2:1}}function De(e,s){let t=e;for(;t!==null;)t.visits+=1,s===y.winPlayer1&&t.parent?.player===1||s===y.winPlayer2&&t.parent?.player===2?t.wins+=1:s===y.draw&&(t.wins+=.5),t=t.parent}function He(e,s,t=1e3,l=Math.sqrt(2)){const o=new fe(K(e),s,null,null);for(let h=0;h<t;h++){const c=Ve(o,l),r=ze(c);De(c,r)}return o.children.reduce((h,c)=>h.visits>c.visits?h:c).move}const Le=(e,s,t)=>{m(s,Array.from({length:7},()=>[]),!0),m(t,1)};var Ue=F('<option class="svelte-1bdwycb"> </option>'),Ze=(e,s,t,l)=>{n(s)&&(m(t,n(s).iterations,!0),m(l,n(s).c,!0))},je=F('<option class="svelte-1bdwycb"> </option>'),Je=(e,s)=>m(s,null),Ke=(e,s)=>m(s,null),Qe=F(`<div class="svelte-1bdwycb"><h4 class="svelte-1bdwycb">Monte Carlo Tree Search parameters</h4> <label for="mcts-preset" class="svelte-1bdwycb">Preset difficulty</label> <select class="svelte-1bdwycb"></select> <br class="svelte-1bdwycb"/><br class="svelte-1bdwycb"/> <label for="mcts-iterations" class="svelte-1bdwycb">Iterations:</label> <input id="mcts-iterations" type="number" min="0" class="svelte-1bdwycb"/> <small class="svelte-1bdwycb">Number of simulations MCTS will run before choosing a move. Higher values usually mean
            stronger play but slower decisions.</small> <br class="svelte-1bdwycb"/><br class="svelte-1bdwycb"/> <label for="mcts-c" class="svelte-1bdwycb">C (exploration constant):</label> <input id="mcts-c" type="number" min="0" step="0.1" class="svelte-1bdwycb"/> <small class="svelte-1bdwycb">Controls the balance between exploration and exploitation. Lower values (e.g. 0.5, 0.7)
            favor tested moves, higher values (e.g. 2.0, 5.0) explore more. A typical default is √2
            ≈ 1.41.</small></div>`),Se=(e,s,t,l)=>s(n(t),n(l)),Xe=F('<div class="svelte-1bdwycb"><button><div></div></button></div>'),Ye=F('<!> <div class="main svelte-1bdwycb"><h3 class="svelte-1bdwycb">Gravitrip</h3></div> <div class="svelte-1bdwycb">See <a href="https://www.quora.com/What-is-the-winning-strategy-for-the-first-player-in-Connect-Four-games" class="svelte-1bdwycb">this quora thread</a> for some tips on the winning strategy</div> <span class="svelte-1bdwycb"><button class="svelte-1bdwycb">Restart game</button> <span style="font-weight: bold" class="svelte-1bdwycb"><!></span></span> <div class="svelte-1bdwycb">Computer stategy: <select class="svelte-1bdwycb"></select></div> <!> <div class="board svelte-1bdwycb"></div>',1);function it(e,s){Ce(s,!0);let t=I(V(Array.from({length:7},()=>[]))),l=te(()=>A(n(t))),o=te(()=>Fe(n(t))),f=I(null);const h=[{name:"easy",iterations:200,c:2},{name:"medium",iterations:1e3,c:1.41},{name:"hard",iterations:5e3,c:.7}];let c=I(V(h[1])),r=I(V(n(c).iterations)),R=I(V(n(c).c)),O=I("mcts");const he=Array.from({length:P},(i,a)=>a),me=Array.from({length:q},(i,a)=>a);let g=I(1);const pe=(i,a)=>{n(g)===1&&ue(n(t),i)&&A(n(t))===y.notOver&&(m(t,G(n(t),a,i),!0),m(g,n(g)===1?2:1,!0),setTimeout(()=>de(),200))},de=()=>{if(n(g)!==2||A(n(t))!==y.notOver)return;let i;if(n(O)==="random")i=Re(n(t),n(g));else if(n(O)==="mcts")i=We(n(t),n(g),{iterations:n(r),c:n(R)});else throw new Error("computer strategy not implemented");const{board:a,move:v}=i;m(t,a,!0),m(f,v,!0),m(g,1)},be=(i,a)=>n(o)===null?!1:n(o).filter(v=>v[0]===i&&v[1]===a).length>0;var Q=Ye(),S=Z(Q);Oe(S,{title:"Gravitrip",description:"Gravitrip"});var D=x(S,6),X=C(D);X.__click=[Le,t,g];var Y=x(X,2),ye=C(Y);{var we=i=>{var a=se("Game Over");M(i,a)},_e=i=>{var a=ne(),v=Z(a);{var w=d=>{var u=se();E(()=>j(u,`Player ${n(l)??""} wins`)),M(d,u)};J(v,d=>{(n(l)===y.winPlayer1||n(l)===y.winPlayer2)&&d(w)},!0)}M(i,a)};J(ye,i=>{n(l)===y.draw?i(we):i(_e,!1)})}b(Y),b(D);var H=x(D,2),L=x(C(H));$(L,20,()=>["mcts","random"],N,(i,a)=>{var v=Ue(),w=C(v,!0);b(v);var d={};E(()=>{j(w,a),d!==(d=a)&&(v.value=(v.__value=a)??"")}),M(i,v)}),b(L),b(H);var B=x(H,2);{var ge=i=>{var a=Qe(),v=x(C(a),4);v.__change=[Ze,c,r,R],$(v,21,()=>h,N,(u,k)=>{var p=je(),W=C(p,!0);b(p);var T={};E(()=>{j(W,n(k).name),T!==(T=n(k))&&(p.value=(p.__value=n(k))??"")}),M(u,p)}),b(v);var w=x(v,7);ie(w),w.__change=[Je,c];var d=x(w,9);ie(d),d.__change=[Ke,c],ke(2),b(a),le(v,()=>n(c),u=>m(c,u)),ce(w,()=>n(r),u=>m(r,u)),ce(d,()=>n(R),u=>m(R,u)),M(i,a)};J(B,i=>{n(O)==="mcts"&&i(ge)})}var U=x(B,2);$(U,21,()=>he.reverse(),N,(i,a)=>{var v=ne(),w=Z(v);$(w,17,()=>me,N,(d,u)=>{var k=Xe(),p=C(k);let W;p.__click=[Se,pe,u,g];var T=C(p);let ee;b(p),b(k),E((Me,xe)=>{Ae(p,"aria-label","col-"+n(u)),W=oe(p,1,"outer-cell svelte-1bdwycb",null,W,Me),ee=oe(T,1,"cell svelte-1bdwycb",null,ee,xe),ae(T,`--drop-distance: ${P-n(a)};`)},[()=>({selected:n(f)===n(u),"winning-cell":be(n(a),n(u))}),()=>({player1:n(t)[n(u)][n(a)]===1,player2:n(t)[n(u)][n(a)]===2,drop:n(t)[n(u)][n(a)]&&n(a)===n(t)[n(u)].length-1})]),re("mouseenter",p,()=>m(f,n(u),!0)),re("mouseleave",p,()=>m(f,null)),M(d,k)}),M(i,v)}),b(U),E(()=>ae(U,`--nb-col: ${q}; --nb-row: ${P}`)),le(L,()=>n(O),i=>m(O,i)),M(e,Q),Pe()}Ie(["click","change"]);export{it as component};
