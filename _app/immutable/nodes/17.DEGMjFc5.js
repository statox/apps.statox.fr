import"../chunks/NZTpNUN0.js";import{p as fe,h as w,aj as T,b as F,s as v,e as p,r as f,t as Q,g as e,a as M,F as D,i as c,d as _e,f as Y,a$ as ze,a_ as ue,j as me,c as Oe}from"../chunks/ClDZ5lex.js";import{d as be,s as ge,e as Ne}from"../chunks/DGwtKS1M.js";import{i as q}from"../chunks/Dqk1RIi9.js";import{c as E,r as de}from"../chunks/DYzGdg2Z.js";import{M as Re}from"../chunks/CJX-clmZ.js";import{m as O,g as I,c as z,b as S,B as _,d as J,a as Ge,n as He,e as qe,i as De,f as Ee}from"../chunks/D3yzcn1s.js";import{e as Fe,i as Ie}from"../chunks/D_hHaaFd.js";import{b as he}from"../chunks/rn1jzQv-.js";import"../chunks/Dt4LyF16.js";import{p as Le}from"../chunks/CUZqXj0t.js";import{g as Ue}from"../chunks/CUDU8dd3.js";const Ve=r=>{const n=I(r),t=Math.floor(Math.random()*n.length);return n[t]},$e=(r,n)=>{const t=Ve(r);return{board:O(r,n,t),move:t}},je=(r,n,t)=>{const a=Qe(r,n,t.iterations,t.c);return{board:O(r,n,a),move:a}};class ye{board;player;move;parent;children=[];visits=0;wins=0;constructor(n,t,a=null,i=null){this.board=n,this.player=t,this.move=a,this.parent=i}isFullyExpanded(){return this.children.length===I(this.board).length}isTerminal(){return S(this.board)!==_.notOver}}function pe(r,n,t,a=Math.sqrt(2)){return t===0?1/0:n/t+a*Math.sqrt(Math.log(r)/t)}function Ae(r,n){for(;!r.isTerminal();)if(r.isFullyExpanded())r=We(r,n);else return Ke(r);return r}function Ke(r){const n=r.children.map(u=>u.move),a=I(r.board).filter(u=>!n.includes(u)),i=a[Math.floor(Math.random()*a.length)],h=z(r.board);O(h,r.player,i);const o=new ye(h,r.player===1?2:1,i,r);return r.children.push(o),o}function We(r,n){return r.children.reduce((t,a)=>{const i=pe(r.visits,t.wins,t.visits,n);return pe(r.visits,a.wins,a.visits,n)>i?a:t})}function Ye(r){const n=z(r.board);let t=r.player;for(;;){const a=S(n);if(a!==_.notOver)return a;const i=I(n),h=i[Math.floor(Math.random()*i.length)];O(n,t,h),t=t===1?2:1}}function Je(r,n){let t=r;for(;t!==null;)t.visits+=1,n===_.winPlayer1&&t.parent?.player===1||n===_.winPlayer2&&t.parent?.player===2?t.wins+=1:n===_.draw&&(t.wins+=.5),t=t.parent}function Qe(r,n,t=1e3,a=Math.sqrt(2)){const i=new ye(z(r),n,null,null);for(let o=0;o<t;o++){const u=Ae(i,a),l=Ye(u);Je(u,l)}return i.children.reduce((o,u)=>o.visits>u.visits?o:u).move}var Xe=(r,n,t,a,i)=>{c(n,e(t).iterations,!0),c(a,e(t).c,!0),i()},Ze=F("<button> </button>"),et=F(`<div><h4>Monte Carlo Tree Search parameters</h4> <div class="difficulty-options svelte-130wfia"><label for="mcts-preset">Preset difficulty</label> <!></div> <div><h5>Iterations:</h5> <input id="mcts-iterations" type="number" min="0"/></div> <div>Number of simulations MCTS will run before choosing a move. Higher values usually mean
        stronger play but slower decisions.</div> <div><h5>C (exploration constant):</h5> <input id="mcts-c" type="number" min="0" step="0.1"/></div> <div>Controls the balance between exploration and exploitation. Lower values (e.g. 0.5, 0.7)
        favor tested moves, higher values (e.g. 2.0, 5.0) explore more. A typical default is √2 ≈
        1.41.</div></div>`);function tt(r,n){fe(n,!0);const t=[{name:"easy",iterations:200,c:2},{name:"medium",iterations:1e3,c:1.41},{name:"hard",iterations:5e3,c:.7}],a=t[1];let i=w(T(a.iterations)),h=w(T(a.c));const o=()=>{n.onUpdate({iterations:e(i),c:e(h)})};var u=et(),l=v(p(u),2),y=v(p(l),2);Fe(y,17,()=>t,Ie,(g,C)=>{var b=Ze();b.__click=[Xe,i,C,h,o];let N;var R=p(b,!0);f(b),Q(G=>{N=E(b,1,"svelte-130wfia",null,N,G),ge(R,e(C).name)},[()=>({selected:e(h)===e(C).c&&e(i)===e(C).iterations})]),M(g,b)}),f(l);var m=v(l,2),k=v(p(m),2);de(k),k.__change=o,f(m);var x=v(m,4),B=v(p(x),2);de(B),B.__change=o,f(x),D(2),f(u),he(k,()=>e(i),g=>c(i,g)),he(B,()=>e(h),g=>c(h,g)),M(r,u),_e()}be(["click","change"]);var at=()=>Ue("/gravitrip"),rt=(r,n)=>{c(n,"manual")},nt=F("Game Over - <!>",1),ot=F('<!> <h3>Local game <button>Back</button></h3> <div class="opponent-choice svelte-h4czyc"><label for="opponent-options">Choose your opponent:</label> <div class="opponent-options svelte-h4czyc"><div><button>Human</button> Play with another human on the same computer.</div> <div><button>Random</button> The computer makes completely random moves, no intelligence at all.</div> <div><button>MCTS</button> The computer uses a <a href="https://en.wikipedia.org/wiki/Monte_Carlo_tree_search">Monte Carlo tree search</a> algorithm to make smart moves. You can tweak the difficulty at the bottom of the page.</div></div></div> <div class="game-controls svelte-h4czyc"><button>New game</button> <button>Cancel move</button></div> <div class="game-results svelte-h4czyc"><!></div> <!> <div class="computer-settings svelte-h4czyc"><!></div>',1);function bt(r,n){fe(n,!0),Le.set("Gravitrips");let t=w(T(J())),a=w(T([])),i=ue(()=>S(e(t))),h=ue(()=>Ee(e(t))),o=w("mcts"),u=w(T({iterations:1e3,c:1.41})),l=w(1),y=1,m=2;const k=()=>{c(t,J(),!0),c(a,[],!0),c(l,1),[y,m]=[m,y],e(o)!=="manual"&&m===e(l)&&b()},x=(s,d)=>{e(a).push({board:z(s),moveByPlayer:d}),c(a,e(a),!0)},B=()=>{if(e(o)==="manual")e(a).pop(),g();else{if(e(a).length===1&&e(a)[e(a).length-1].moveByPlayer===m)return;e(a)[e(a).length-1].moveByPlayer===m&&e(a).pop(),e(a).length&&e(a)[e(a).length-1].moveByPlayer===y&&e(a).pop()}c(a,e(a),!0),e(a).length===0?c(t,J(),!0):c(t,z(e(a)[e(a).length-1].board),!0)},g=()=>c(l,e(l)===1?2:1,!0),C=s=>{if(y!==e(l)&&e(o)!=="manual"||!De(e(t),s)||S(e(t))!==_.notOver)return;let d;if(y===e(l))d=y;else if(m===e(l)&&e(o)==="manual")d=m;else return;c(t,O(e(t),d,s),!0),x(e(t),d),g(),e(o)!=="manual"&&setTimeout(()=>b(),200)},b=()=>{if(m!==e(l)||S(e(t))!==_.notOver||e(o)==="manual")return;let s;if(e(o)==="random")s=$e(e(t),e(l));else if(e(o)==="mcts")s=je(e(t),e(l),e(u));else throw new Error("computer strategy not implemented");const{board:d}=s;c(t,d,!0),x(e(t),m),g()},N=s=>{switch(s.key){case"r":k();break}};var R=ot();Ne("keydown",ze,N);var G=Y(R);Re(G,{title:"Gravitrip",description:"Gravitrip",iconPath:"/gravitrips.png"});var L=v(G,2),we=v(p(L));we.__click=[at],f(L);var U=v(L,2),X=v(p(U),2),V=p(X),Z=p(V);Z.__click=[rt,o];let ee;D(),f(V);var $=v(V,2),te=p($);te.__click=()=>{c(o,"random"),m===e(l)&&b()};let ae;D(),f($);var re=v($,2),ne=p(re);ne.__click=()=>{c(o,"mcts"),m===e(l)&&b()};let oe;D(3),f(re),f(X),f(U);var j=v(U,2),ie=p(j);ie.__click=k;var se=v(ie,2);se.__click=B,f(j);var A=v(j,2),Me=p(A);{var ke=s=>{var d=nt(),K=v(Y(d));{var xe=P=>{var H=me("Draw");M(P,H)},Be=P=>{var H=Oe(),Te=Y(H);{var Se=W=>{var ve=me();Q(()=>ge(ve,`Player ${e(i)??""} wins`)),M(W,ve)};q(Te,W=>{(e(i)===_.winPlayer1||e(i)===_.winPlayer2)&&W(Se)},!0)}M(P,H)};q(K,P=>{e(i)===_.draw?P(xe):P(Be,!1)})}M(s,d)};q(Me,s=>{e(i)!==_.notOver&&s(ke)})}f(A);var le=v(A,2);Ge(le,{get nbColumns(){return qe},get nbRows(){return He},get board(){return e(t)},get winningCells(){return e(h)},onMove:C});var ce=v(le,2),Ce=p(ce);{var Pe=s=>{tt(s,{onUpdate:d=>c(u,d,!0)})};q(Ce,s=>{e(o)==="mcts"&&s(Pe)})}f(ce),Q((s,d,K)=>{ee=E(Z,1,"svelte-h4czyc",null,ee,s),ae=E(te,1,"svelte-h4czyc",null,ae,d),oe=E(ne,1,"svelte-h4czyc",null,oe,K),se.disabled=e(a).length===0},[()=>({selected:e(o)==="manual"}),()=>({selected:e(o)==="random"}),()=>({selected:e(o)==="mcts"})]),M(r,R),_e()}be(["click"]);export{bt as component};
