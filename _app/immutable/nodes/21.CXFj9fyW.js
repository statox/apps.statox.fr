import"../chunks/NZTpNUN0.js";import{o as ke}from"../chunks/ano4uZzk.js";import{e as W,g as A,h as J,H as pe,p as Ee,G as ue,b as X,i as c,s as l,t as Ce,a as P,d as Fe,r as u,f as Ge}from"../chunks/CbdQCwiJ.js";import{d as Le,s as Pe}from"../chunks/C_JLaYK3.js";import{i as V}from"../chunks/Cwax3Gcm.js";import{c as ee,r as M,b as de}from"../chunks/De0WW0FM.js";import{b as z}from"../chunks/BG7yEM_d.js";import{M as Xe}from"../chunks/B9HkKwpn.js";import{P as Ye}from"../chunks/BFyX9Knh.js";class Ze{default;#e=W();get value(){return A(this.#e)}set value(a){J(this.#e,a,!0)}key="";constructor(a,s){this.key=a,this.value=s,this.default=s;{const o=localStorage.getItem(a);o&&(this.value=this.deserialize(o))}pe(()=>{localStorage.setItem(this.key,this.serialize(this.value))})}reset(){localStorage.removeItem(this.key),this.value=this.default}serialize(a){return JSON.stringify(a)}deserialize(a){return JSON.parse(a)}}function f(t,a){return new Ze(t,a)}const Re=(t,a,s)=>a-s<=t&&t<=a+s;function qe(t,a){const s=Math.sqrt(t*t+a*a),o=Math.atan2(a,t);return{r:s,theta:o}}const Ne=(t,a)=>{const{gridSize:s,colorMode:o,cellSize:N,t:Y,noiseMode:x,noiseFactor:Z,displacementX:m,displacementY:B,displacementZ:h,levelsStart:w,levelsEnd:k,levelsStep:D,levelsMargin:H}=a;t.background(0);const R=t.color(255,0,0),q=t.color(0,255,0);for(let g=0;g<s;g++)for(let S=0;S<s;S++){let _=0;if(x==="carthesian")_=t.noise(S*Z+Y*m,g*Z+Y*B,Y*h);else if(x==="polar"){const{r:b,theta:d}=qe((S-s/2)*Z,(g-s/2)*Z);_=t.noise(d*m,b*B,Y*h)}for(let b=w;b<=k;b+=D||.1){if(!Re(_,b,H))continue;let d=255;if(o==="white")d=255;else if(o==="gradient")d=t.map(b,w,k,100,255);else if(o==="quantized-gradient"){const I=Math.trunc(_*10)/10;d=t.map(I,w,k,100,255)}else if(o==="color-gradient")d=t.lerpColor(R,q,_);else if(o==="color-scaled-gradient"){const I=t.map(_,w,k,0,1);d=t.lerpColor(R,q,I)}t.fill(d),t.circle(S*N,g*N,N)}}};var xe=(t,a)=>a.grid=!a.grid,Be=X("<br/>"),De=X('<label for="blurValue">Blur value (default 4)</label> <input type="number" step="1"/>',1),He=X('<div class="control-section svelte-1a6vy18"><label for="gridSize">Grid size</label> <input type="number" step="1"/> <label for="blurEnabled">Enable blur</label> <!> <!></div>'),Ie=(t,a)=>a.noise=!a.noise,Ve=X("<br/>"),We=X('<div class="control-section svelte-1a6vy18"><label for="noiseMode">Noise Mode</label> <select id="noiseMode-select"><option>Carthesian</option><option>Polar</option></select> <label for="displacementX">displacementX</label> <input type="number" step="0.01"/> <label for="displacementY">displacementY</label> <input type="number" step="0.01"/> <label for="displacementZ">displacementZ</label> <input type="number" step="0.01"/> <label for="noiseFactor">noiseFactor</label> <input type="number" step="0.01"/></div>'),Ae=(t,a)=>a.lines=!a.lines,Je=X("<br/>"),Oe=X('<div class="control-section svelte-1a6vy18"><label for="levelsStart">levelsStart</label> <input type="number" step="0.1"/> <label for="levelsEnd">levelsEnd</label> <input type="number" step="0.1"/> <label for="levelsStep">levelsStep</label> <input type="number" step="0.001"/> <label for="levelsMargin">levelsMargin</label> <input type="number" step="0.001"/> <label for="colorMode">colorMode</label> <select id="colorMode-select"><option>White</option><option>Gradient</option><option>Quantized Gradient</option><option>Color Gradient</option><option>Color scaled Gradient</option></select></div>'),Te=X('<div class="container svelte-1a6vy18"><div id="canvas-container"><div class="stats"><label for="fps">FPS</label> <span> </span></div> <!></div> <div class="controls-container svelte-1a6vy18"><span class="control-header svelte-1a6vy18"><button>&nbsp;Grid controls</button></span> <!> <span class="control-header svelte-1a6vy18"><button>&nbsp;Noise controls</button></span> <!> <span class="control-header svelte-1a6vy18"><button>&nbsp;Lines controls</button></span> <!> <div class="control-section svelte-1a6vy18"><label for="resetAll">Reset all</label><button>Reset</button></div></div></div>');function ra(t,a){Ee(a,!0);let s=W(void 0),o=1e3,N=0,Y=0,x=0,Z=W(0);const m=f("p5-terrain-gridSize",200);let B=o/m.value;pe(()=>{B=o/m.value});let h=f("p5-terrain-blurEnabled",!1),w=f("p5-terrain-blurValue",4),k=f("p5-terrain-displacementX",0),D=f("p5-terrain-displacementY",0),H=f("p5-terrain-displacementZ",.01),R=f("p5-terrain-noiseFactor",.02),q=f("p5-terrain-levelsStart",.2),g=f("p5-terrain-levelsEnd",.8),S=f("p5-terrain-levelsStep",.05),_=f("p5-terrain-margin",.005),b=f("p5-terrain-colorMode","gradient"),d=f("p5-terrain-nodeMode","carthesian"),I=W(ue(h.value?"on":"off"));const fe=()=>{[m,h,w,d,k,D,H,R,q,g,S,_,b].forEach(r=>r.reset())},E=ue({grid:!1,noise:!1,lines:!1}),_e=e=>{function r(){const n=Math.min(e.windowWidth,e.windowHeight);o=Math.floor(n*.9),e.resizeCanvas(o,o),B=o/m.value}function v(){const n=Date.now();n-Y>1e3&&(J(Z,x,!0),Y=n,x=0),x++}e.windowResized=()=>{r()},e.setup=()=>{J(s,e,!0),e.createCanvas(o,o),r(),e.noStroke()},e.draw=()=>{v(),N++,Ne(e,{gridSize:m.value,colorMode:b.value,noiseMode:d.value,t:N,cellSize:B,noiseFactor:R.value,displacementX:k.value,displacementY:D.value,displacementZ:H.value,levelsStart:q.value,levelsEnd:g.value,levelsMargin:_.value,levelsStep:S.value}),h.value&&e.filter(e.BLUR,w.value)}};ke(()=>{A(s)?.remove()});var O=Te(),T=c(O),Q=c(T),ae=l(c(Q),2),be=c(ae,!0);u(ae),u(Q);var me=l(Q,2);Ye(me,{sketch:_e}),u(T);var le=l(T,2),U=c(le),te=c(U);te.__click=[xe,E],u(U);var re=l(U,2);{var he=e=>{var r=Be();P(e,r)},ge=e=>{var r=He(),v=l(c(r),2);M(v);var n=l(v,4);Xe(n,{get value(){return A(I)},label:"",design:"slider",$$events:{change:()=>{h.value=!h.value,J(I,h.value?"on":"off",!0)}}});var C=l(n,2);{var F=p=>{var y=De(),G=l(Ge(y),2);M(G),z(G,()=>w.value,i=>w.value=i),P(p,y)};V(C,p=>{h.value&&p(F)})}u(r),z(v,()=>m.value,p=>m.value=p),P(e,r)};V(re,e=>{E.grid?e(he):e(ge,!1)})}var j=l(re,2),oe=c(j);oe.__click=[Ie,E],u(j);var se=l(j,2);{var Se=e=>{var r=Ve();P(e,r)},ye=e=>{var r=We(),v=l(c(r),2),n=c(v);n.value=n.__value="carthesian";var C=l(n);C.value=C.__value="polar",u(v);var F=l(v,4);M(F);var p=l(F,4);M(p);var y=l(p,4);M(y);var G=l(y,4);M(G),u(r),de(v,()=>d.value,i=>d.value=i),z(F,()=>k.value,i=>k.value=i),z(p,()=>D.value,i=>D.value=i),z(y,()=>H.value,i=>H.value=i),z(G,()=>R.value,i=>R.value=i),P(e,r)};V(se,e=>{E.noise?e(Se):e(ye,!1)})}var K=l(se,2),ne=c(K);ne.__click=[Ae,E],u(K);var ie=l(K,2);{var Me=e=>{var r=Je();P(e,r)},ze=e=>{var r=Oe(),v=l(c(r),2);M(v);var n=l(v,4);M(n);var C=l(n,4);M(C);var F=l(C,4);M(F);var p=l(F,4),y=c(p);y.value=y.__value="white";var G=l(y);G.value=G.__value="gradient";var i=l(G);i.value=i.__value="quantized-gradient";var $=l(i);$.value=$.__value="color-gradient";var ce=l($);ce.value=ce.__value="color-scaled-gradient",u(p),u(r),z(v,()=>q.value,L=>q.value=L),z(n,()=>g.value,L=>g.value=L),z(C,()=>S.value,L=>S.value=L),z(F,()=>_.value,L=>_.value=L),de(p,()=>b.value,L=>b.value=L),P(e,r)};V(ie,e=>{E.lines?e(Me):e(ze,!1)})}var ve=l(ie,2),we=l(c(ve));we.__click=fe,u(ve),u(le),u(O),Ce(()=>{Pe(be,A(Z)),ee(te,1,`collapse-button ${E.grid?"fas fa-chevron-right":"fas fa-chevron-down"}`,"svelte-1a6vy18"),ee(oe,1,`collapse-button ${E.noise?"fas fa-chevron-right":"fas fa-chevron-down"}`,"svelte-1a6vy18"),ee(ne,1,`collapse-button ${E.lines?"fas fa-chevron-right":"fas fa-chevron-down"}`,"svelte-1a6vy18")}),P(t,O),Fe()}Le(["click"]);export{ra as component};
