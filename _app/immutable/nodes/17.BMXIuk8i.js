import"../chunks/NZTpNUN0.js";import{p as fe,h as w,aj as T,b as I,s as v,e as h,r as f,t as Q,g as e,a as M,F as E,i as c,d as _e,f as z,a$ as Oe,a_ as ue,j as me,c as Ne}from"../chunks/ClDZ5lex.js";import{d as be,s as ge,e as Re}from"../chunks/DGwtKS1M.js";import{i as D}from"../chunks/Dqk1RIi9.js";import{c as F,r as de}from"../chunks/DYzGdg2Z.js";import{M as Ge}from"../chunks/CJX-clmZ.js";import{m as N,g as L,c as O,b as S,B as _,d as J,a as He,n as qe,e as De,i as Ee,f as Fe}from"../chunks/CUUmQ8A2.js";import{e as Ie,i as Le}from"../chunks/D_hHaaFd.js";import{b as pe}from"../chunks/rn1jzQv-.js";import"../chunks/Dt4LyF16.js";import{p as Ue}from"../chunks/CwybpDkK.js";import{g as Ve}from"../chunks/ByOF0nJ0.js";const $e=r=>{const n=L(r),t=Math.floor(Math.random()*n.length);return n[t]},je=(r,n)=>{const t=$e(r);return{board:N(r,n,t),move:t}},Ae=(r,n,t)=>{const a=Qe(r,n,t.iterations,t.c);return{board:N(r,n,a),move:a}};class ye{board;player;move;parent;children=[];visits=0;wins=0;constructor(n,t,a=null,s=null){this.board=n,this.player=t,this.move=a,this.parent=s}isFullyExpanded(){return this.children.length===L(this.board).length}isTerminal(){return S(this.board)!==_.notOver}}function he(r,n,t,a=Math.sqrt(2)){return t===0?1/0:n/t+a*Math.sqrt(Math.log(r)/t)}function Ke(r,n){for(;!r.isTerminal();)if(r.isFullyExpanded())r=Ye(r,n);else return We(r);return r}function We(r){const n=r.children.map(u=>u.move),a=L(r.board).filter(u=>!n.includes(u)),s=a[Math.floor(Math.random()*a.length)],p=O(r.board);N(p,r.player,s);const o=new ye(p,r.player===1?2:1,s,r);return r.children.push(o),o}function Ye(r,n){return r.children.reduce((t,a)=>{const s=he(r.visits,t.wins,t.visits,n);return he(r.visits,a.wins,a.visits,n)>s?a:t})}function ze(r){const n=O(r.board);let t=r.player;for(;;){const a=S(n);if(a!==_.notOver)return a;const s=L(n),p=s[Math.floor(Math.random()*s.length)];N(n,t,p),t=t===1?2:1}}function Je(r,n){let t=r;for(;t!==null;)t.visits+=1,n===_.winPlayer1&&t.parent?.player===1||n===_.winPlayer2&&t.parent?.player===2?t.wins+=1:n===_.draw&&(t.wins+=.5),t=t.parent}function Qe(r,n,t=1e3,a=Math.sqrt(2)){const s=new ye(O(r),n,null,null);for(let o=0;o<t;o++){const u=Ke(s,a),l=ze(u);Je(u,l)}return s.children.reduce((o,u)=>o.visits>u.visits?o:u).move}var Xe=(r,n,t,a,s)=>{c(n,e(t).iterations,!0),c(a,e(t).c,!0),s()},Ze=I("<button> </button>"),et=I(`<div><h4>Monte Carlo Tree Search parameters</h4> <div class="difficulty-options svelte-90tef"><label for="mcts-preset">Preset difficulty</label> <!></div> <div><h5>Iterations:</h5> <input id="mcts-iterations" type="number" min="0"/></div> <div>Number of simulations MCTS will run before choosing a move. Higher values usually mean
        stronger play but slower decisions.</div> <div><h5>C (exploration constant):</h5> <input id="mcts-c" type="number" min="0" step="0.1"/></div> <div>Controls the balance between exploration and exploitation. Lower values (e.g. 0.5, 0.7)
        favor tested moves, higher values (e.g. 2.0, 5.0) explore more. A typical default is √2 ≈
        1.41.</div></div>`);function tt(r,n){fe(n,!0);const t=[{name:"easy",iterations:200,c:2},{name:"medium",iterations:1e3,c:1.41},{name:"hard",iterations:5e3,c:.7}],a=t[1];let s=w(T(a.iterations)),p=w(T(a.c));const o=()=>{n.onUpdate({iterations:e(s),c:e(p)})};var u=et(),l=v(h(u),2),y=v(h(l),2);Ie(y,17,()=>t,Le,(g,C)=>{var b=Ze();b.__click=[Xe,s,C,p,o];let R;var G=h(b,!0);f(b),Q(H=>{R=F(b,1,"svelte-90tef",null,R,H),ge(G,e(C).name)},[()=>({selected:e(p)===e(C).c&&e(s)===e(C).iterations})]),M(g,b)}),f(l);var m=v(l,2),k=v(h(m),2);de(k),k.__change=o,f(m);var x=v(m,4),B=v(h(x),2);de(B),B.__change=o,f(x),E(2),f(u),pe(k,()=>e(s),g=>c(s,g)),pe(B,()=>e(p),g=>c(p,g)),M(r,u),_e()}be(["click","change"]);var at=()=>Ve("/gravitrips"),rt=(r,n)=>{c(n,"manual")},nt=I("Game Over - <!>",1),ot=I('<!> <h3>Local game <button>Back</button></h3> <div class="opponent-choice svelte-1m0eka9"><label for="opponent-options">Choose your opponent:</label> <div class="opponent-options svelte-1m0eka9"><div><button>Human</button> Play with another human on the same computer.</div> <div><button>Random</button> The computer makes completely random moves, no intelligence at all.</div> <div><button>MCTS</button> The computer uses a <a href="https://en.wikipedia.org/wiki/Monte_Carlo_tree_search">Monte Carlo tree search</a> algorithm to make smart moves. You can tweak the difficulty at the bottom of the page.</div></div></div> <div class="game-controls svelte-1m0eka9"><button>New game</button> <button>Cancel move</button></div> <div class="game-results svelte-1m0eka9"><!></div> <!> <div class="computer-settings svelte-1m0eka9"><!></div>',1);function bt(r,n){fe(n,!0),Ue.set("Gravitrips");let t=w(T(J())),a=w(T([])),s=ue(()=>S(e(t))),p=ue(()=>Fe(e(t))),o=w("mcts"),u=w(T({iterations:1e3,c:1.41})),l=w(1),y=1,m=2;const k=()=>{c(t,J(),!0),c(a,[],!0),c(l,1),[y,m]=[m,y],e(o)!=="manual"&&m===e(l)&&b()},x=(i,d)=>{e(a).push({board:O(i),moveByPlayer:d}),c(a,e(a),!0)},B=()=>{if(e(o)==="manual")e(a).pop(),g();else{if(e(a).length===1&&e(a)[e(a).length-1].moveByPlayer===m)return;e(a)[e(a).length-1].moveByPlayer===m&&e(a).pop(),e(a).length&&e(a)[e(a).length-1].moveByPlayer===y&&e(a).pop()}c(a,e(a),!0),e(a).length===0?c(t,J(),!0):c(t,O(e(a)[e(a).length-1].board),!0)},g=()=>c(l,e(l)===1?2:1,!0),C=i=>{if(y!==e(l)&&e(o)!=="manual"||!Ee(e(t),i)||S(e(t))!==_.notOver)return;let d;if(y===e(l))d=y;else if(m===e(l)&&e(o)==="manual")d=m;else return;c(t,N(e(t),d,i),!0),x(e(t),d),g(),e(o)!=="manual"&&setTimeout(()=>b(),200)},b=()=>{if(m!==e(l)||S(e(t))!==_.notOver||e(o)==="manual")return;let i;if(e(o)==="random")i=je(e(t),e(l));else if(e(o)==="mcts")i=Ae(e(t),e(l),e(u));else throw new Error("computer strategy not implemented");const{board:d}=i;c(t,d,!0),x(e(t),m),g()},R=i=>{switch(i.key){case"r":k();break}};var G=ot();Re("keydown",Oe,R);var H=z(G);Ge(H,{title:"Gravitrips",description:"Gravitrips",iconPath:"/gravitrips.png"});var U=v(H,2),we=v(h(U));we.__click=[at],f(U);var V=v(U,2),X=v(h(V),2),$=h(X),Z=h($);Z.__click=[rt,o];let ee;E(),f($);var j=v($,2),te=h(j);te.__click=()=>{c(o,"random"),m===e(l)&&b()};let ae;E(),f(j);var re=v(j,2),ne=h(re);ne.__click=()=>{c(o,"mcts"),m===e(l)&&b()};let oe;E(3),f(re),f(X),f(V);var A=v(V,2),se=h(A);se.__click=k;var ie=v(se,2);ie.__click=B,f(A);var K=v(A,2),Me=h(K);{var ke=i=>{var d=nt(),W=v(z(d));{var xe=P=>{var q=me("Draw");M(P,q)},Be=P=>{var q=Ne(),Te=z(q);{var Se=Y=>{var ve=me();Q(()=>ge(ve,`Player ${e(s)??""} wins`)),M(Y,ve)};D(Te,Y=>{(e(s)===_.winPlayer1||e(s)===_.winPlayer2)&&Y(Se)},!0)}M(P,q)};D(W,P=>{e(s)===_.draw?P(xe):P(Be,!1)})}M(i,d)};D(Me,i=>{e(s)!==_.notOver&&i(ke)})}f(K);var le=v(K,2);He(le,{get nbColumns(){return De},get nbRows(){return qe},get board(){return e(t)},get winningCells(){return e(p)},onMove:C});var ce=v(le,2),Ce=h(ce);{var Pe=i=>{tt(i,{onUpdate:d=>c(u,d,!0)})};D(Ce,i=>{e(o)==="mcts"&&i(Pe)})}f(ce),Q((i,d,W)=>{ee=F(Z,1,"svelte-1m0eka9",null,ee,i),ae=F(te,1,"svelte-1m0eka9",null,ae,d),oe=F(ne,1,"svelte-1m0eka9",null,oe,W),ie.disabled=e(a).length===0},[()=>({selected:e(o)==="manual"}),()=>({selected:e(o)==="random"}),()=>({selected:e(o)==="mcts"})]),M(r,G),_e()}be(["click"]);export{bt as component};
