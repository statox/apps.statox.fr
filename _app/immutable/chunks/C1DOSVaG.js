import{D as a}from"./DTyfSRsR.js";import{P as h}from"./CpX8xF_L.js";import{g as b}from"./DBn0rLrA.js";import{s as y}from"./BgJCQexd.js";import{r as l,a as p}from"./DHCJZjrS.js";const u=t=>{const s=a.now(),n=a.fromSeconds(t.creationDateUnix).toRelative({style:"short"})||"N/A",f=t.creationDateUnix+t.ttl,r=a.fromSeconds(f),c=r.diffNow("seconds").get("seconds"),o=r.diff(s).rescale(),e=[];o.years>0?(e.push("years"),e.push("months")):o.months>0?e.push("months"):o.days>0?e.push("days"):o.hours>0?(e.push("hours"),e.push("minutes")):o.minutes?e.push("minutes"):e.push("seconds");const d=o.shiftTo(...e).mapUnits(m=>Math.ceil(m)).toHuman();let i="not_soon";return r<s?i="expired":c<60*60?i="very_soon":c<60*60*24&&(i="soon"),{...t,formatedCreationDate:n,formatedExpirationDate:d,expirationStatus:i}},w=async()=>(await l({path:"/clipboard/getPublicEntries"})).map(s=>u(s)),A=async()=>(await l({authorize:!0,path:"/clipboard/getAllEntries"})).map(s=>u(s)),C=async t=>{const s=h+"/clipboard/addEntry",n=await b();if(typeof n=="string"){if(t.file){await y.post(s).auth(n,{type:"bearer"}).field("name",t.name).field("content",t.content).field("ttlSeconds",t.ttlSeconds).field("isPublic",t.isPublic).attach("file",t.file);return}return p({path:"/clipboard/addEntry",data:t})}},S=t=>p({path:"/clipboard/deleteEntry",data:{name:t}});export{w as a,S as d,A as g,C as u};
