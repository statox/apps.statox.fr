import{P as i}from"./CpX8xF_L.js";import{g as h}from"./xEa4ORok.js";const m=async o=>{const{path:t}=o;if(!t.length||t[0]!=="/")throw new Error("Malformed path");const r=new Headers;if(r.set("Content-Type","application/json"),o.authorize){const s=await h();r.set("Authorization",`Bearer ${s}`)}const e=await fetch(`${i}${t}`,{method:"GET",mode:"cors",headers:r});if(e.status<200||e.status>=300){let s;try{s=await e.text()}catch{s="could not parse server error message"}throw new p(e.status,s)}return e.json()};class p extends Error{code;constructor(t,r){super(r),this.code=t}}const l=async o=>{const{path:t,data:r,isUnauthenticatedCall:e}=o;if(!t.length||t[0]!=="/")throw new Error("Malformed path");const s=e?"":await h(),c=JSON.stringify(r),a=await fetch(`${i}${t}`,{method:"POST",mode:"cors",headers:{"Content-Type":"application/json",Authorization:e?"":`Bearer ${s}`},body:c});if(a.status<200||a.status>=300){let n;try{n=await a.text()}catch{n="could not parse server error message"}throw new p(a.status,n)}return a.json()};export{p as A,l as a,m as r};
