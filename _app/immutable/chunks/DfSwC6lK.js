var d=Object.defineProperty;var w=(r,t,e)=>t in r?d(r,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[t]=e;var i=(r,t,e)=>w(r,typeof t!="symbol"?t+"":t,e);import{P as h}from"./CpX8xF_L.js";import{g as p}from"./Jh5Ua1Cj.js";const y=async r=>{const{path:t}=r;if(!t.length||t[0]!=="/")throw new Error("Malformed path");const e=new Headers;if(e.set("Content-Type","application/json"),r.authorize){const o=await p();e.set("Authorization",`Bearer ${o}`)}const s=await fetch(`${h}${t}`,{method:"GET",mode:"cors",headers:e});if(s.status<200||s.status>=300){let o;try{o=await s.text()}catch{o="could not parse server error message"}throw new u(s.status,o)}return s.json()};class u extends Error{constructor(e,s){super(s);i(this,"code");this.code=e}}const A=async r=>{const{path:t,data:e,isUnauthenticatedCall:s}=r;if(!t.length||t[0]!=="/")throw new Error("Malformed path");const o=s?"":await p(),c=JSON.stringify(e),a=await fetch(`${h}${t}`,{method:"POST",mode:"cors",headers:{"Content-Type":"application/json",Authorization:s?"":`Bearer ${o}`},body:c});if(a.status<200||a.status>=300){let n;try{n=await a.text()}catch{n="could not parse server error message"}throw new u(a.status,n)}return a.json()};export{u as A,A as a,y as r};
